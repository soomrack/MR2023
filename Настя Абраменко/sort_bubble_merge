#include <iostream>
#include<cstring>

#define ARR_SIZE 10
int buffer[ARR_SIZE];

void bubble_sort(int* arr, size_t size)
{
    for (size_t i = 0; i < size - 1; i++) {
        for (size_t j = size - 1; i < j; j--) {
            if (arr[j] < arr[j - 1])
                std::swap(arr[j], arr[j - 1]);
        }
    }
}


void merge(int* arr, int begin, int end)
{
    int first = begin;
    int middle = begin + (end - begin) / 2;
    int second = middle + 1;
    int k = 0;
    memset(buffer, 0, ARR_SIZE);

    while (first <= middle && second <= end)
    {
        if (arr[first] <= arr[second]) {
            buffer[k] = arr[first];
            first++;
        }
        else {
            buffer[k] = arr[second];
            second++;
        }
        k++;
    }

    while (first <= middle)
    {
        buffer[k] = arr[first];
        first++;
        k++;
    }

    while (second <= end)
    {
        buffer[k] = arr[second];
        second++;
        k++;
    }

    for (first = 0; first < k; first++) {
        arr[begin] = buffer[first];
        begin++;
    }

}


void merge_sort(int* arr, int left, int right)
{
    int temp = 0;
    if (left < right) {
        if (right - left == 1) {
            if (arr[left] > arr[right])
                std::swap(arr[left], arr[right]);
        }
        else {
            merge_sort(arr, left, left + (right - left) / 2);
            merge_sort(arr, (left + (right - left) / 2) + 1, right);
            merge(arr, left, right);
        }
    }

}


void input(int* m, int& n)
{
    std::cout << "Enter the number of array elements: ";
    std::cin >> n;
    for (int i = 0; i < n; ++i) {
        std::cout << "a[" << i << "]= ";
        std::cin >> m[i];
    }
}


void print(int* m, int n)
{
    for (int i = 0; i < n; i++) {
        std::cout << m[i] << " ";
    }

    std::cout << std::endl;
}



int main()
{
    int n;
    int arr[ARR_SIZE];
    input(arr, n);
    //n = 10;
    //int arr[ARR_SIZE] = { 1, 3, 4, 3, 2, 5, 7, 18, 2, 9 };
    //print(arr, n);
    //bubble_sort(arr, n);
    merge_sort(arr, 0, n - 1);
    std::cout << "Sorted array: " << std::endl;
    print(arr, n);

    return 0;
}
